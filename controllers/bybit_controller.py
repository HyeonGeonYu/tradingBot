# controllers/bybit_controller.py
from utils.logger import setup_logger
from playwright.async_api import async_playwright
logger = setup_logger()
class BybitController:
    def __init__(self):
        self.playwright = None
        self.browser = None
        self.page = None

    async def init(self):
        try:
            self.playwright = await async_playwright().start()
            # üö® CDPÎßå ÏÇ¨Ïö©, subprocess ÏóÜÏù¥
            self.browser = await self.playwright.chromium.connect_over_cdp("http://localhost:9222")
            context = self.browser.contexts[0]
            self.page = context.pages[0]
            print("CDP Ïó∞Í≤∞ ÏÑ±Í≥µzZZ")
        except Exception as e:
            print("‚ùå CDP Ïó∞Í≤∞ Ïã§Ìå®:", e)
            raise

    async def _select_100_percent_market(self):
        await self.page.click('text="100%"')
        await self.page.click('text="ÏãúÏû•Í∞Ä"')

    async def _confirm_order(self):
        await self.page.click('div.GmCfm.Show >> a._OK')

    async def buy_market_100(self, price=None, ma=None):
        try:
            logger.info("üü© Îß§Ïàò ÏãúÏûë")
            await self._select_100_percent_market()
            await self.page.click('text="Îß§Ïàò / Long"')
            await self._confirm_order()
            logger.info(f"‚úÖ Îß§Ïàò ÏôÑÎ£å @ {price} (MA100: {ma})")
        except Exception as e:
            logger.error(f"‚ùå Îß§Ïàò Ïò§Î•ò: {e}")

    async def sell_market_100(self, price=None, ma=None):
        try:
            logger.info("üü• Îß§ÎèÑ ÏãúÏûë")
            await self._select_100_percent_market()
            await self.page.click('text="Îß§ÎèÑ / Short"')
            await self._confirm_order()
            logger.info(f"‚úÖ Îß§ÎèÑ ÏôÑÎ£å @ {price} (MA100: {ma})")
        except Exception as e:
            logger.error(f"‚ùå Îß§ÎèÑ Ïò§Î•ò: {e}")

    async def close_position_market(self, price=None, ma=None):
        try:
            logger.info("üìâ Ìè¨ÏßÄÏÖò Ï≤≠ÏÇ∞ ÏãúÏûë")
            await self.page.click('td._OFunc a[data="B"]')
            await self.page.wait_for_selector('div.GmCfm.Show >> a._OK', timeout=3000)
            await self.page.click('div.GmCfm.Show >> a._OK')
            logger.info(f"‚úÖ Ï≤≠ÏÇ∞ ÏôÑÎ£å @ {price} (MA100: {ma})")
        except Exception as e:
            logger.error(f"‚ùå Ï≤≠ÏÇ∞ Ïò§Î•ò: {e}")

    async def close(self):
        await self.browser.close()
        await self.playwright.stop()
